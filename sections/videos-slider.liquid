<div class="section-id-{{ section.id }} portrait-videos-slider {% if section.settings.custom_classes != blank %}{{ section.settings.custom_classes }}{% endif %}">
  <div
    class="container{% if section.settings.enable_carousel %} container--not-mobile{% endif %}{% if section.settings.full_width %} container--no-max{% endif %}"
  >
    {%- if section.settings.enable_carousel -%}
      <carousel-slider class="carousel block collection-slider">
    {%- endif -%}
    <div
      class="hometitle align-center has-paging{% if section.settings.enable_carousel %} slider-nav{% endif %}"
      {%- render 'animation-attrs', attrs: 'data-cc-animate data-cc-animate-delay="0.3s"' -%}
    >
      {% if section.settings.enable_carousel %}
        <button name="prev" class="slider-nav__btn has-ltr-icon">
          <span class="visually-hidden">{{ 'general.slider.previous' | t }}</span>
          {% render 'icon-chevron-left' %}
        </button>
      {% endif %}
      {% if section.settings.title != blank %}
        <h2
          class="has-paging__title h2 m-0"
          style="font-size: {{ section.settings.title_size_desktop }}px; color: {{ section.settings.title_color }};"
        >
          {{ section.settings.title }}
        </h2>
      {% endif %}

      {% if section.settings.enable_carousel %}
        <button name="next" class="slider-nav__btn has-ltr-icon">
          <span class="visually-hidden">{{ 'general.slider.next' | t }}</span>
          {% render 'icon-chevron-right' %}
        </button>
      {% endif %}
    </div>
    <div class="collection-listing fade-in-up{% if section.settings.enable_carousel %} slider {% if section.settings.full_width %}slider--edge-peek{% endif %} slider--mobile-container-pad slider--no-scrollbar{% endif %}">
      <div class="product-grid product-grid--per-row-{{ section.settings.grid }} product-grid--per-row-mob-{{ section.settings.grid_mobile }}{% if section.settings.enable_carousel %} slider__grid product-grid--carousel{% endif %}">
        {%- if section.blocks.size == 0 -%}
          <p class="no-videos-message">No videos selected</p>
        {%- else -%}
          {%- for block in section.blocks -%}
            {%- if section.settings.enable_carousel -%}
              <div class="slider__item">
            {%- endif -%}

            <div class="video-block" {{ block.shopify_attributes }}>
              {%- assign video_id = '' -%}
              {%- assign video_type = '' -%}

              {%- if block.settings.video_url contains 'youtube.com' or block.settings.video_url contains 'youtu.be' -%}
                {%- assign video_type = 'youtube' -%}
                {%- if block.settings.video_url contains 'youtu.be/' -%}
                  {%- assign video_id_start = block.settings.video_url | split: 'youtu.be/' | last -%}
                  {%- assign video_id = video_id_start | split: '?' | first -%}
                {%- elsif block.settings.video_url contains 'watch?v=' -%}
                  {%- assign video_id_start = block.settings.video_url | split: 'watch?v=' | last -%}
                  {%- assign video_id = video_id_start | split: '&' | first -%}
                {%- endif -%}
              {%- elsif block.settings.video_url contains 'vimeo.com' -%}
                {%- assign video_type = 'vimeo' -%}
                {%- assign url_parts = block.settings.video_url | split: '/' -%}
                {%- assign video_id = url_parts | last -%}
              {%- elsif block.settings.video_url contains '.mp4' -%}
                {%- assign video_type = 'mp4' -%}
              {%- endif -%}

              <div class="video-wrapper portrait-video">
                {%- if video_type == 'youtube' and video_id != '' -%}
                  <iframe
                    src="https://www.youtube.com/embed/{{ video_id }}?rel=0&modestbranding=1"
                    frameborder="0"
                    allow="autoplay; encrypted-media"
                    allowfullscreen
                    loading="lazy"
                  >
                  </iframe>
                {%- elsif video_type == 'vimeo' and video_id != '' -%}
                  <iframe
                    src="https://player.vimeo.com/video/{{ video_id }}"
                    frameborder="0"
                    allow="autoplay; fullscreen"
                    allowfullscreen
                    loading="lazy"
                  >
                  </iframe>
                {%- elsif video_type == 'mp4' -%}
                  <video
                    controls
                    preload="metadata"
                    {% if block.settings.thumbnail %}
                      poster="{{ block.settings.thumbnail | img_url: '400x600' }}"
                    {% endif %}
                  >
                    <source src="{{ block.settings.video_url }}" type="video/mp4">
                    Your browser does not support the video tag.
                  </video>
                {%- else -%}
                  <div class="video-placeholder">
                    {%- if block.settings.thumbnail -%}
                      <img
                        src="{{ block.settings.thumbnail | img_url: '400x600' }}"
                        alt="Video thumbnail"
                        loading="lazy"
                      >
                    {%- else -%}
                      <div class="placeholder-content">
                        <p>Invalid video URL</p>
                      </div>
                    {%- endif -%}
                  </div>
                {%- endif -%}
              </div>

              {% if block.settings.video_title != blank %}
                <h3 class="video-title" style="color: {{ section.settings.video_title_color }};">
                  {{ block.settings.video_title }}
                </h3>
              {% endif %}

              {% if block.settings.video_description != blank %}
                <div class="video-description" style="color: {{ section.settings.video_description_color }};">
                  {{ block.settings.video_description }}
                </div>
              {% endif %}
            </div>

            {%- if section.settings.enable_carousel -%}
              </div>
            {%- endif -%}
          {%- endfor -%}
        {%- endif -%}
      </div>
    </div>

    {%- if section.settings.enable_carousel -%}
      </carousel-slider>
    {%- endif -%}
  </div>
</div>

<script>
  // Video Play Button Enhancement for Portrait Videos Slider
  class VideoPlayButtonManager {
    constructor() {
      this.init();
    }

    init() {
      // Wait for DOM to be ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => this.setupPlayButtons());
      } else {
        this.setupPlayButtons();
      }
    }

    setupPlayButtons() {
      const videoWrappers = document.querySelectorAll('.portrait-video');

      videoWrappers.forEach((wrapper) => {
        this.addPlayButtonToVideo(wrapper);
      });
    }

    addPlayButtonToVideo(wrapper) {
      const iframe = wrapper.querySelector('iframe');
      const video = wrapper.querySelector('video');
      const placeholder = wrapper.querySelector('.video-placeholder');

      // Only add play button if there's an iframe (YouTube/Vimeo) or placeholder with thumbnail
      if (iframe || (placeholder && placeholder.querySelector('img'))) {
        this.createPlayButton(wrapper);
      }

      // For HTML5 videos, we'll show custom controls
      if (video) {
        this.setupHTML5VideoControls(wrapper, video);
      }
    }

    createPlayButton(wrapper) {
      // Check if play button already exists
      if (wrapper.querySelector('.video-play-button')) {
        return;
      }

      const playButton = document.createElement('div');
      playButton.className = 'video-play-button';
      playButton.innerHTML = `
      <svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg">
        <circle cx="30" cy="30" r="30" fill="rgba(255, 255, 255, 0.9)" />
        <circle cx="30" cy="30" r="29" fill="none" stroke="rgba(0, 0, 0, 0.1)" stroke-width="2" />
        <path d="M24 18L24 42L42 30L24 18Z" fill="#000" />
      </svg>
    `;

      // Add click event listener
      playButton.addEventListener('click', (e) => {
        e.preventDefault();
        this.handlePlayButtonClick(wrapper);
      });

      wrapper.appendChild(playButton);
    }

    setupHTML5VideoControls(wrapper, video) {
      // Hide controls initially
      video.removeAttribute('controls');

      // For HTML5 videos, create a custom play button overlay
      if (wrapper.querySelector('.video-play-button')) {
        return;
      }

      const playButton = document.createElement('div');
      playButton.className = 'video-play-button html5-play-button';
      playButton.innerHTML = `
      <svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg">
        <circle cx="30" cy="30" r="30" fill="rgba(255, 255, 255, 0.9)" />
        <circle cx="30" cy="30" r="29" fill="none" stroke="rgba(0, 0, 0, 0.1)" stroke-width="2" />
        <path d="M24 18L24 42L42 30L24 18Z" fill="#000" />
      </svg>
    `;

      // Show controls and hide play button when video is played
      playButton.addEventListener('click', (e) => {
        e.preventDefault();
        video.setAttribute('controls', 'controls');
        video.play();
        playButton.style.display = 'none';
      });

      // Hide controls and show play button when video is paused or ended
      video.addEventListener('pause', () => {
        video.removeAttribute('controls');
        playButton.style.display = 'flex';
      });

      video.addEventListener('ended', () => {
        video.removeAttribute('controls');
        playButton.style.display = 'flex';
      });

      wrapper.appendChild(playButton);
    }

    handlePlayButtonClick(wrapper) {
      const iframe = wrapper.querySelector('iframe');
      const placeholder = wrapper.querySelector('.video-placeholder');

      if (iframe) {
        // For iframes, we need to modify the src to include autoplay
        const currentSrc = iframe.src;

        if (currentSrc.includes('youtube.com')) {
          // Add autoplay parameter for YouTube
          const separator = currentSrc.includes('?') ? '&' : '?';
          iframe.src = currentSrc + separator + 'autoplay=1';
        } else if (currentSrc.includes('vimeo.com')) {
          // Add autoplay parameter for Vimeo
          const separator = currentSrc.includes('?') ? '&' : '?';
          iframe.src = currentSrc + separator + 'autoplay=1';
        }

        // Hide the play button
        const playButton = wrapper.querySelector('.video-play-button');
        if (playButton) {
          playButton.style.display = 'none';
        }
      } else if (placeholder) {
        // For placeholders, we might want to show a message or redirect
        console.log('Placeholder clicked - implement custom behavior here');
      }
    }

    // Method to reinitialize after dynamic content changes (useful for AJAX-loaded content)
    refresh() {
      this.setupPlayButtons();
    }
  }

  // Auto-initialize when script loads
  const videoManager = new VideoPlayButtonManager();

  // Export for manual control if needed
  window.VideoPlayButtonManager = VideoPlayButtonManager;
  window.videoManager = videoManager;

  /* CSS Styles - Add this to your stylesheet or in a <style> tag */
  const playButtonStyles = `
.video-play-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  cursor: pointer;
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  opacity: 0.9;
}

.video-play-button:hover {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1.1);
}

.video-play-button svg {
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
  transition: all 0.3s ease;
}

.video-play-button:hover svg {
  filter: drop-shadow(0 6px 12px rgba(0, 0, 0, 0.3));
}

.video-play-button:active {
  transform: translate(-50%, -50%) scale(0.95);
}

/* Ensure video wrapper has relative positioning */
.portrait-video {
  position: relative;
}

/* Hide play button on small screens if needed */
@media screen and (max-width: 480px) {
  .video-play-button svg {
    width: 45px;
    height: 45px;
  }
}

/* Fade out animation when video starts */
.video-play-button.fade-out {
  opacity: 0;
  pointer-events: none;
}
`;

  // Inject styles into the page
  const styleSheet = document.createElement('style');
  styleSheet.textContent = playButtonStyles;
  document.head.appendChild(styleSheet);
</script>

<style>
      .section-id-{{ section.id }} {
        padding-top: {{ section.settings.padding_top_desktop }}px;
        padding-bottom: {{ section.settings.padding_bottom_desktop }}px;
        background-color: {{ section.settings.background_color }};
      }

      .section-id-{{ section.id }} .container {

        margin: 0 auto;
        padding-left: {{ section.settings.horizontal_padding_desktop }}px;
        padding-right: {{ section.settings.horizontal_padding_desktop }}px;
      }

      .section-id-{{ section.id }} .section-header {
        margin-bottom: 40px;
      }

      .section-id-{{ section.id }} .section-title {
        margin: 0;
        font-weight: 600;
      }

      .section-id-{{ section.id }} .video-block {
        margin-bottom: 20px;
      }

      .section-id-{{ section.id }} .video-wrapper {
        position: relative;
        width: 100%;
        margin-bottom: 15px;
        border-radius: {{ section.settings.video_border_radius }}px;
        overflow: hidden;
      }

      .section-id-{{ section.id }} .portrait-video {
        aspect-ratio: 9/16;
      }

      .section-id-{{ section.id }} .video-wrapper iframe,
      .section-id-{{ section.id }} .video-wrapper video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .section-id-{{ section.id }} .video-placeholder {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f5f5f5;
        position: absolute;
        top: 0;
        left: 0;
      }

      .section-id-{{ section.id }} .video-placeholder img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .section-id-{{ section.id }} .placeholder-content {
        text-align: center;
        color: #666;
      }

      .section-id-{{ section.id }} .video-title {
        margin: 0 0 8px 0;
        font-size: {{ section.settings.video_title_size_desktop }}px;
        font-weight: 600;
        line-height: 1.3;
      }

      .section-id-{{ section.id }} .video-description {
        margin: 0;
        font-size: {{ section.settings.video_description_size }}px;
        line-height: 1.4;
      }

      .section-id-{{ section.id }} .no-videos-message {
        text-align: center;
        color: #666;
        font-style: italic;
      }

      .section-id-{{ section.id }} .slider-nav__btn {
        background: {{ section.settings.nav_button_bg }};
        color: {{ section.settings.nav_button_color }};
        border: 1px solid {{ section.settings.nav_button_border }};
        border-radius: {{ section.settings.nav_button_radius }}px;
        opacity: 0.7;
        transition: opacity 0.3s ease;
      }


      .section-id-{{ section.id }} .slider-nav__btn:hover {
        opacity: 0.8;
      }

      @media screen and (max-width: 768px) {
        .section-id-{{ section.id }} {
          padding-top: {{ section.settings.padding_top_mobile }}px;
          padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
        }

        .section-id-{{ section.id }} .container {
          padding-left: {{ section.settings.horizontal_padding_mobile }}px;
          padding-right: {{ section.settings.horizontal_padding_mobile }}px;
        }

        .section-id-{{ section.id }} .section-title {
          font-size: {{ section.settings.title_size_mobile }}px;
        }

        .section-id-{{ section.id }} .video-title {
          font-size: {{ section.settings.video_title_size_mobile }}px;
        }

        .section-id-{{ section.id }} .product-grid {
          grid-template-columns: repeat({{ section.settings.grid_mobile }}, 1fr);
        }
        .section-id-{{ section.id }} .hometitle.slider-nav {
              display: flex;
              align-items: center;
              justify-content: space-between;
              gap: 20px;
        }
      @media screen and (max-width: 768px) {
      .section-id-{{ section.id }} .slider__item {
          width: calc(100vw - 100px);
      }
    }

  /* Play Button Styles */
  .section-id-{{ section.id }} .video-play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    cursor: pointer;
    z-index: 10;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    opacity: 0.9;
  }

  .section-id-{{ section.id }} .video-play-button:hover {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.1);
  }

  .section-id-{{ section.id }} .video-play-button svg {
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
    transition: all 0.3s ease;
  }

  .section-id-{{ section.id }} .video-play-button:hover svg {
    filter: drop-shadow(0 6px 12px rgba(0, 0, 0, 0.3));
  }

  .section-id-{{ section.id }} .video-play-button:active {
    transform: translate(-50%, -50%) scale(0.95);
  }

  /* Fade out animation when video starts */
  .section-id-{{ section.id }} .video-play-button.fade-out {
    opacity: 0;
    pointer-events: none;
  }

  {% comment %}.collection-slider.carousel[inactive] .slider-nav .slider-nav__btn {
    display: flex !important;
    opacity: 1 !important;
    pointer-events: auto !important;
  }{% endcomment %}

  @media screen and (max-width: 480px) {
    .section-id-{{ section.id }} .video-play-button svg {
      width: 45px;
      height: 45px;
    }
  }
</style>

{% schema %}
{
  "name": "Portrait Videos Slider2",
  "class": "portrait-videos-slider",
  "settings": [
    {
      "type": "header",
      "content": "Section Settings"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Featured Videos"
    },
    {
      "type": "range",
      "id": "title_size_desktop",
      "label": "Title Size Desktop (px)",
      "min": 16,
      "max": 60,
      "step": 2,
      "default": 32
    },
    {
      "type": "range",
      "id": "title_size_mobile",
      "label": "Title Size Mobile (px)",
      "min": 14,
      "max": 40,
      "step": 2,
      "default": 24
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title Color",
      "default": "#000000"
    },

    {
      "type": "text",
      "id": "custom_classes",
      "label": "Custom CSS Classes"
    },
    {
      "type": "header",
      "content": "Layout Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_carousel",
      "label": "Enable Carousel",
      "default": true
    },
    {
      "type": "range",
      "id": "grid",
      "label": "Videos per Row Desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4
    },
    {
      "type": "range",
      "id": "grid_mobile",
      "label": "Videos per Row Mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 2
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full Page Width",
      "default": false
    },
    {
      "type": "header",
      "content": "Spacing Settings"
    },
    {
      "type": "range",
      "id": "padding_top_desktop",
      "label": "Padding Top Desktop (px)",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 50
    },
    {
      "type": "range",
      "id": "padding_bottom_desktop",
      "label": "Padding Bottom Desktop (px)",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 50
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "label": "Padding Top Mobile (px)",
      "min": 0,
      "max": 80,
      "step": 5,
      "default": 30
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "label": "Padding Bottom Mobile (px)",
      "min": 0,
      "max": 80,
      "step": 5,
      "default": 30
    },
    {
      "type": "range",
      "id": "horizontal_padding_desktop",
      "label": "Horizontal Padding Desktop (px)",
      "min": 0,
      "max": 50,
      "step": 5,
      "default": 20
    },
    {
      "type": "range",
      "id": "horizontal_padding_mobile",
      "label": "Horizontal Padding Mobile (px)",
      "min": 0,
      "max": 30,
      "step": 5,
      "default": 15
    },
    {
      "type": "header",
      "content": "Background Settings"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Video Settings"
    },
    {
      "type": "range",
      "id": "video_border_radius",
      "label": "Video Border Radius (px)",
      "min": 0,
      "max": 30,
      "step": 2,
      "default": 8
    },
    {
      "type": "range",
      "id": "video_title_size_desktop",
      "label": "Video Title Size Desktop (px)",
      "min": 12,
      "max": 32,
      "step": 2,
      "default": 18
    },
    {
      "type": "range",
      "id": "video_title_size_mobile",
      "label": "Video Title Size Mobile (px)",
      "min": 10,
      "max": 24,
      "step": 2,
      "default": 16
    },
    {
      "type": "color",
      "id": "video_title_color",
      "label": "Video Title Color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "video_description_size",
      "label": "Video Description Size (px)",
      "min": 10,
      "max": 20,
      "step": 1,
      "default": 14
    },
    {
      "type": "color",
      "id": "video_description_color",
      "label": "Video Description Color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Navigation Settings"
    },
    {
      "type": "color",
      "id": "nav_button_bg",
      "label": "Navigation Button Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation Button Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_border",
      "label": "Navigation Button Border",
      "default": "#cccccc"
    },
    {
      "type": "range",
      "id": "nav_button_radius",
      "label": "Navigation Button Radius (px)",
      "min": 0,
      "max": 20,
      "step": 2,
      "default": 6
    }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video",
      "settings": [
        {
          "type": "url",
          "id": "video_url",
          "label": "Video URL",
          "info": "YouTube, Vimeo, or MP4 video URL"
        },
        {
          "type": "text",
          "id": "video_title",
          "label": "Video Title"
        },
        {
          "type": "richtext",
          "id": "video_description",
          "label": "Video Description"
        },
        {
          "type": "image_picker",
          "id": "thumbnail",
          "label": "Custom Thumbnail",
          "info": "Optional fallback image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Portrait Videos Slider"
    }
  ]
}
{% endschema %}
