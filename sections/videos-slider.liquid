<div class="section-id-{{ section.id }} elements-slider-row {% if section.settings.color_scheme != 'default' %}use-color-scheme use-color-scheme--{{ section.settings.color_scheme }}{% endif %}">
  <div class="container{% if section.settings.enable_carousel %} container--not-mobile{% endif %}{% if section.settings.full_width %} container--no-max{% endif %}">
    {%- if section.settings.enable_carousel -%}
      <carousel-slider class="carousel block collection-slider">
    {%- endif -%}

    <div
      class="hometitle align-center has-paging{% if section.settings.enable_carousel %} slider-nav{% endif %}"
      {%- render 'animation-attrs', attrs: 'data-cc-animate data-cc-animate-delay="0.3s"' -%}
    >
      {% if section.settings.enable_carousel %}
        <button name="prev" class="slider-nav__btn has-ltr-icon">
          <span class="visually-hidden">{{ 'general.slider.previous' | t }}</span>
          {% render 'icon-chevron-left' %}
        </button>
      {% endif %}

      {% if section.settings.enable_carousel %}
        <button name="next" class="slider-nav__btn has-ltr-icon">
          <span class="visually-hidden">{{ 'general.slider.next' | t }}</span>
          {% render 'icon-chevron-right' %}
        </button>
      {% endif %}
    </div>

    <div
      class="collection-listing fade-in-up{% if section.settings.enable_carousel %} slider {% if section.settings.full_width %}slider--edge-peek{% endif %} slider--mobile-container-pad slider--no-scrollbar{% endif %}"
      {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}
    >
      <div class="product-grid product-grid--per-row-{{ section.settings.grid }} product-grid--per-row-mob-{{ settings.prod_thumb_mob_per_row }}{% if section.settings.enable_carousel %} slider__grid product-grid--carousel{% endif %}">
        {%- if section.blocks == 0 -%}
          <p>No elements selected</p>
        {%- else -%}
          {%- for block in section.blocks -%}
            {%- if section.settings.enable_carousel -%}
              <div class="slider__item">
            {%- endif -%}
            <div class="element-block article-list video-card">
              {%- if block.settings.video_url -%}
                <div class="video-card-wrapper">
                  {%- assign video_url = block.settings.video_url -%}

                  <!-- Thumbnail overlay with play button -->
                  <div class="video-thumbnail-container">
                    {%- if block.settings.thumbnail_image -%}
                      <img
                        src="{{ block.settings.thumbnail_image | img_url: '600x' }}"
                        alt="Video thumbnail"
                        class="video-thumbnail"
                      >
                    {%- else -%}
                      {%- if video_url contains 'youtube.com' or video_url contains 'youtu.be' -%}
                        {%- assign video_id = video_url | split: 'v=' | last | split: '&' | first -%}
                        {%- if video_url contains 'youtu.be' -%}
                          {%- assign video_id = video_url | split: 'youtu.be/' | last | split: '?' | first -%}
                        {%- endif -%}
                        <img
                          src="https://img.youtube.com/vi/{{ video_id }}/maxresdefault.jpg"
                          alt="Video thumbnail"
                          class="video-thumbnail"
                        >
                      {%- else -%}
                        <div class="video-thumbnail video-thumbnail--placeholder">
                          <span>Video</span>
                        </div>
                      {%- endif -%}
                    {%- endif -%}

                    <button class="video-play-btn" onclick="playVideo(this)">
                      <svg width="60" height="60" viewBox="0 0 60 60" fill="none">
                        <circle cx="30" cy="30" r="30" fill="rgba(0,0,0,0.7)"/>
                        <path d="M23 20L23 40L40 30L23 20Z" fill="white"/>
                      </svg>
                    </button>
                  </div>

                  <!-- Hidden video container -->
                  <div
                    class="video-container"
                    style="display: none;"
                    data-video-url="{{ video_url }}"
                    data-video-type="{%- if video_url contains 'youtube.com' or video_url contains 'youtu.be' -%}youtube{%- elsif video_url contains 'vimeo.com' -%}vimeo{%- elsif video_url contains '.mp4' -%}mp4{%- else -%}unsupported{%- endif -%}"
                    data-video-id="{%- if video_url contains 'youtube.com' or video_url contains 'youtu.be' -%}{%- assign video_id = video_url | split: 'v=' | last | split: '&' | first -%}{%- if video_url contains 'youtu.be' -%}{%- assign video_id = video_url | split: 'youtu.be/' | last | split: '?' | first -%}{%- endif -%}{{ video_id }}{%- elsif video_url contains 'vimeo.com' -%}{%- assign video_id = video_url | split: 'vimeo.com/' | last | split: '?' | first -%}{{ video_id }}{%- endif -%}"
                  >
                    <!-- Video will be loaded here dynamically -->
                  </div>

                  {%- if block.settings.video_title -%}
                    <h4 class="video-title">{{ block.settings.video_title }}</h4>
                  {%- endif -%}
                </div>
              {%- else -%}
                <p>No video URL provided</p>
              {%- endif -%}
            </div>
            {%- if section.settings.enable_carousel -%}
              </div>
            {%- endif -%}
          {%- endfor -%}
        {%- endif -%}
      </div>
    </div>

    {%- if section.settings.enable_carousel -%}
      </carousel-slider>
    {%- endif -%}
  </div>
</div>

<script>
  function playVideo(button) {
    const card = button.closest('.video-card-wrapper');
    const thumbnailContainer = card.querySelector('.video-thumbnail-container');
    const videoContainer = card.querySelector('.video-container');

    const videoType = videoContainer.dataset.videoType;
    const videoId = videoContainer.dataset.videoId;
    const videoUrl = videoContainer.dataset.videoUrl;

    // Create the appropriate video element with autoplay
    let videoHTML = '';

    if (videoType === 'youtube') {
      videoHTML = `
        <iframe
          src="https://www.youtube.com/embed/${videoId}?autoplay=1&mute=0&rel=0"
          frameborder="0"
          allowfullscreen
          class="video-iframe"
          allow="autoplay; encrypted-media">
        </iframe>
      `;
    } else if (videoType === 'vimeo') {
      videoHTML = `
        <iframe
          src="https://player.vimeo.com/video/${videoId}?autoplay=1&muted=0"
          frameborder="0"
          allowfullscreen
          class="video-iframe"
          allow="autoplay; fullscreen">
        </iframe>
      `;
    } else if (videoType === 'mp4') {
      videoHTML = `
        <video controls autoplay class="video-element">
          <source src="${videoUrl}" type="video/mp4">
          Your browser does not support the video tag.
        </video>
      `;

      // For MP4, we need to trigger play after DOM insertion
      videoContainer.innerHTML = videoHTML;
      setTimeout(() => {
        const videoElement = videoContainer.querySelector('video');
        if (videoElement) {
          videoElement.play().catch((e) => console.log('Autoplay prevented:', e));
        }
      }, 100);
    } else {
      videoHTML = '<p>Unsupported video format</p>';
    }

    // Insert video HTML (except for MP4 which is handled above)
    if (videoType !== 'mp4') {
      videoContainer.innerHTML = videoHTML;
    }

    // Hide thumbnail and show video
    thumbnailContainer.style.display = 'none';
    videoContainer.style.display = 'block';
  }
</script>

{% stylesheet %}
  .video-slider {
    background-color: #63ce63ff;
  }
  .video-slider .collection-slider .has-paging .slider-nav__btn {
    background: white;
    color: black;
    border: 1px solid rgba(181, 181, 181, 1) !important;
    border-radius: 6px;
  }
  .video-slider .element-block {
    margin-bottom: 10px;
  }

  .video-slider .elements-slider-row {
    padding-bottom: 50px;
    padding-top: 50px;
    margin-top: 0;
  }
  .slider-nav__btn {
    opacity: 0.7;
  }
  .slider-nav__btn:hover {
    opacity: 0.8;
  }

  /* Video card styling */
  .video-card {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .video-card:hover {
    transform: translateY(-2px);
  }

  .video-card-wrapper {
    position: relative;
  }

  .video-thumbnail-container {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 177.78%; /* 9:16 aspect ratio (portrait) */
    overflow: hidden;
    cursor: pointer;
  }

  .video-thumbnail {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .video-thumbnail--placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 18px;
    font-weight: 500;
  }

  .video-play-btn {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: none;
    border: none;
    cursor: pointer;
    transition: transform 0.3s ease, opacity 0.3s ease;
    opacity: 0.9;
  }

  .video-play-btn:hover {
    transform: translate(-50%, -50%) scale(1.1);
    opacity: 1;
  }

  .video-container {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 177.78%; /* 9:16 aspect ratio (portrait) */
    background: #000;
  }

  .video-iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .video-element {
    width: 100%;
    height: auto;
  }

  .video-title {
    padding: 12px 16px;
    margin: 0;
    font-size: 16px;
    font-weight: 500;
    color: #333;
    background: white;
  }
{% endstylesheet %}

{% schema %}
{
  "name": "Videos slider",
  "class": "videos-slider",
  "disabled_on": {
    "templates": ["password"],
    "groups": ["aside"]
  },
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Videos"
    },
    {
      "type": "checkbox",
      "id": "enable_carousel",
      "label": "Enable carousel",
      "default": true
    },
    {
      "type": "range",
      "id": "grid",
      "label": "Products per row",
      "min": 2,
      "max": 5,
      "step": 1,
      "default": 4
    },
    {
      "type": "range",
      "id": "rows",
      "label": "Rows",
      "info": "Does not apply to carousel layout",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 1
    },

    {
      "id": "full_width",
      "type": "checkbox",
      "label": "Full page width",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video",
      "settings": [
        {
          "type": "url",
          "id": "video_url",
          "label": "Video URL",
          "info": "Paste a YouTube, Vimeo, or MP4 video URL"
        },
        {
          "type": "image_picker",
          "id": "thumbnail_image",
          "label": "Custom Thumbnail (Optional)",
          "info": "If not provided, YouTube videos will use auto-generated thumbnails"
        },
        {
          "type": "text",
          "id": "video_title",
          "label": "Video Title (Optional)",
          "info": "Display title below the video thumbnail"
        }
      ]
    }
  ]
}
{% endschema %}
